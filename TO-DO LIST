#include  
#include  
#include  
  
using namespace std;  
  
struct Task {  
   string description;  
   bool completed;  
};  
   
void addTask(vector&amp; tasks) {  
   Task newTask;  
   cout &lt;&lt; "Enter task description: ";  
   getline(cin, newTask.description);  
   newTask.completed = false;  
   tasks.push_back(newTask);  
   cout &lt;&lt; "Task added successfully!" &lt;&lt; endl;  
}  
  
void viewTasks(const vector&amp; tasks) {  
   cout &lt;&lt; "Tasks:" &lt;&lt; endl;  
   for (int i = 0; i &lt; tasks.size(); i++) {  
      cout &lt;&lt; "[" &lt;&lt; (tasks[i].completed? "X" : " ") &lt;&lt; "] " &lt;&lt; tasks[i].description &lt;&lt; endl;  
   }  
}  
  
void deleteTask(vector&amp; tasks) {  
   int taskNumber;  
   cout &lt;&lt; "Enter the task number to delete: ";  
   cin &gt;&gt; taskNumber;  
   if (taskNumber &gt;= 1 &amp;&amp; taskNumber &lt;= tasks.size()) {  
      tasks.erase(tasks.begin() + taskNumber - 1);  
      cout &lt;&lt; "Task deleted successfully!" &lt;&lt; endl;  
   } else {  
      cout &lt;&lt; "Invalid task number!" &lt;&lt; endl;  
   }  
}  
  
int main() {  
   vector tasks;  
   int choice;  
   while (true) {  
      cout &lt;&lt; "To-Do List Manager" &lt;&lt; endl;  
      cout &lt;&lt; "1. Add Task" &lt;&lt; endl;  
      cout &lt;&lt; "2. View Tasks" &lt;&lt; endl;  
      cout &lt;&lt; "3. Delete Task" &lt;&lt; endl;  
      cout &lt;&lt; "4. Exit" &lt;&lt; endl;  
      cout &lt;&lt; "Enter your choice: ";  
      cin &gt;&gt; choice;  
      switch (choice) {  
        case 1:  
           addTask(tasks);  
           break;  
        case 2:  
           viewTasks(tasks);  
           break;  
        case 3:  
           deleteTask(tasks);  
           break;  
        case 4:  
           return 0;  
        default:  
           cout &lt;&lt; "Invalid choice!" &lt;&lt; endl;  
      }  
   }  
   return 0;  
}  
